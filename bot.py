import os
import json
import asyncio
import aiohttp
import logging
from datetime import datetime

# Configuration
TELEGRAM_BOT_TOKEN = os.environ.get('TELEGRAM_BOT_TOKEN', '')
TELEGRAM_CHAT_ID = os.environ.get('TELEGRAM_CHAT_ID', '')
STEAM_API_KEY = os.environ.get('STEAM_API_KEY', '')

STEAM_ACCOUNTS = [

    
    '76561199439232924','76561199438571951','76561199439709202','76561199443254879','76561199437315148','76561199443682764',
    '76561199442806079','76561199370442120','76561199376259976','76561199442992514','76561199422866221','76561199434845161',
    '76561199371384511','76561199444007754','76561199376333122','76561199385174708','76561199376231456','76561199436039640',
    '76561199567429048','76561199435562102','76561199376177541','76561199376077570','76561199376204563','76561199443514777',
    '76561199393175860','76561199404971171','76561199375916779','76561199440524847','76561199233518558','76561199376077570',
    '76561199441897041','76561199443682764','76561199438374094','76561199439709202','76561199437315148','76561199376204563',
    '76561199443254879','76561199438571951','76561199439232924','76561199442806079','76561199376259976','76561199370442120',
    '76561199434845161','76561199424275491','76561199434842936','76561199441605843','76561199404790155','76561199405228371',
    '76561199416592488','76561199405082116','76561199442022128','76561199372920303','76561199434855530','76561199435186266',
    '76561199394717896','76561199405116705','76561199393770489','76561199434842936','76561199404536478','76561199375916779',
    '76561199440524847','76561199233518558','76561199446818307','76561199393175860','76561199404971171','76561199214478296',
    '76561199442600407','76561199440800308','76561199285626957','76561199439386897','76561199395286530','76561199405228371',
    '76561199404781649','76561199392189555','76561199425424436','76561199404710863','76561199442368171','76561199371741399',
    '76561199443160128','76561199330746345','76561199423050694','76561199405295532','76561199370281123','76561199268156938',
    '76561199405067338','76561199404647002','76561199439990839','76561199405090881','76561199132573781','76561199441599692',
    '76561199443562228','76561199405078917','76561199176050121','76561199435031474','76561199440733051','76561199441824491',
    '76561199443711151','76561199405317257','76561199439386897','76561199440800308','76561199285626957','76561199439866130',
    '76561199440800308','76561199285626957','76561199440667328','76561199395286530','76561199442176292','76561199256508848',
    '76561199406869720','76561199404959682','76561199439386897','76561199442600407','76561199436328913','76561199405158192',
    '76561199394043947','76561199229042013','76561199435561738','76561199352707593','76561199405029173','76561199405003949',
    '76561199439150415','76561199405003005','76561199439101365','76561199442229051','76561199442058653','76561199267804147',
    '76561199443619131','76561199024471670','76561199439874070','76561199442454433','76561199441916310','76561199267660180',
    '76561199442276849','76561199441944808','76561199441924956','76561199404722500','76561199267580118','76561199442469381',
    '76561199439514111','76561199404627167','76561199392002707','76561199405078344','76561199435939166','76561199443061489',
    '76561199441560910','76561199405379847','76561199437368407','76561199441647217','76561199404734276','76561199267660180',
    '76561199442276849','76561199416578239','76561199441924956','76561199404722500','76561199439641359','76561199442622127',
    '76561199441882546','76561199443230379','76561199442189206','76561199439150415','76561199405003005','76561199439101365',
    '76561199441647217','76561199416068815','76561199440642037','76561199405258465','76561199404734276','76561199440733502',
    '76561199443022777','76561199442915059','76561199405379847','76561199442052654','76561199443496290','76561199416578239',
    '76561199441910454','76561199405303017','76561199443359793','76561199404798621','76561199388678529','76561199404890519',
    '76561199383932354','76561199405020872','76561199285660683','76561199438856481','76561199176050121','76561199438856481',
    '76561199441647217','76561199404734276','76561199405379847','76561199437368407','76561199422696446','76561199441560910',
    '76561199443496290','76561199404966126','76561199404456787','76561199441898476','76561199440940431','76561199405168551',
    '76561199404890519','76561199383932354','76561199443120505','76561199443562228','76561199405037720','76561199443679582',
    '76561199405020872','76561199404913401','76561199376245336','76561199376148812','76561199466438728','76561199443542896',
    '76561199441910454','76561199405303017','76561199388678529','76561199442345550','76561199442176292','76561199256508848',
    '76561199285292740','76561199442856183','76561199392002707','76561199441922706','76561199441019732','76561199401086140',
    '76561199404871708','76561199441297379','76561199405020872','76561199405082202','76561199405372631','76561199439939031',
    '76561199404949511','76561199405158192','76561199442091813','76561199376148812','76561199466438728','76561199443542896',
    '76561199285660683','76561199442091813','76561199285989004','76561199439970949','76561199443275790','76561199405294340',
    '76561199442157554','76561199442201867','76561199434980308','76561199389653077','76561199439866130','76561199438295824',
    '76561199443359793','76561199404798621','76561199439298967','76561199404984050','76561199444793320','76561199441926176',
    '76561199439632181','76561199388359614','76561199379316956','76561199443085552','76561199442896865','76561199388984356',
    '76561199416597150','76561199443572284','76561199405414458','76561199445888191','76561199441716070','76561199404966126',
    '76561199439515208','76561199441659146','76561199440031754','76561199442149719','76561199439310396','76561199404996286',
    '76561199441870105','76561199442893249','76561199377039992','76561199440930445','76561199443149716','76561199442289358',
    '76561199443395247','76561199437672212','76561199442100806','76561199257344632','76561199442704279','76561199440852405',
    '76561199023016686','76561199443015724','76561199375362739','76561199441874758','76561199440593678','76561199442335481',
    '76561199405154999','76561199438961902','76561199446417760','76561199441749104','76561199378497514','76561199443424303',
    '76561199443047038','76561199377039992','76561199437672212','76561199440930445','76561199441870105','76561199442335481',
    '76561199439310396','76561199404996286','76561199439632181','76561199388984356','76561199443572284','76561199443085552',
    '76561199442896865','76561199416597150','76561199405414458','76561199445888191','76561199440031754','76561199441659146',
    '76561199218567141','76561199438309480','76561199240776268','76561199446099196','76561199380390197','76561199442235793',
    '76561199439927308','76561199434835272','76561199405092460','76561199346965630','76561199234120870','76561199444045925',
    '76561199416144546','76561199439166777','76561199388159971','76561199441209431','76561199243509316','76561199405132722',
    '76561199440869780','76561199404444232','76561199435710668','76561199442800942','76561199443870075','76561199380246133',
    '76561199388159971','76561199439166777','76561199405058401','76561199440869780','76561199422826663','76561199405069410',
    '76561199442858229','76561199416144546','76561199435710668','76561199442800942','76561199405132722','76561199442227092',
    '76561199444045925','76561199439768028','76561199439546013','76561199369345938','76561199442711773','76561199214600669',
    '76561199443288735','76561199439860569','76561199404444232','76561199443424303','76561199442247388','76561199442203157',
    '76561199441297379','76561199441922706','76561199401086140','76561199253980645','76561199441019732','76561199404945669',
    '76561199443121584','76561199405446565','76561199442794653','76561199257082232','76561199443232485','76561199443333777',
    '76561199440985525','76561199441155303','76561199439514111','76561199404627167','76561199442527935','76561199439607573',
    '76561199445045096','76561199441922706','76561199441019732','76561199443121584','76561199439650571','76561199440668114',
    '76561199405327723','76561199376153212','76561199404945669','76561199434853315','76561199240776268','76561199380390197',
    '76561199401086140','76561199253980645','76561199405041962','76561199442532398','76561199267807536','76561199442235793',
    '76561199213029794','76561199148474466','76561199214590791','76561199440668114','76561199214886401','76561199228973343',
    '76561199240729494','76561199267660613','76561199012254922','76561199233888115','76561199240782281','76561199176071487',
    '76561199191822734','76561199176514132','76561199192218019','76561199240729494','76561199415236348','76561199213029794',
    '76561199214590791','76561199214886401','76561199148474466','76561199438309480','76561199434835272','76561199439760327',
    '76561199441428778','76561199446521986','76561199446765074','76561199446526854','76561199446500764','76561199446208319',
    '76561199445795416','76561199444789424','76561199445549744','76561199446151978','76561199441804979','76561199441570253',
    '76561199447063172','76561199439674404','76561199445619763','76561199446114877','76561199446506822','76561199446449675',
    '76561199440562272','76561199445165787','76561199445555124','76561199446602970','76561199436804129','76561199441894564',
    '76561199441518293','76561199437531536','76561199439727831','76561199445314210','76561199446275827','76561199444967519',
    '76561199445382435','76561199446017527','76561199446416162','76561199443639592','76561199445394247','76561199446174131',
    '76561199443950027','76561199446166760','76561199444355745','76561199437654822','76561199439206764','76561199447339695',
    '76561199447077130','76561199445165787','76561199445789791','76561199447063172','76561199445555124','76561199444492691',
    '76561199436332692','76561199445414514','76561199444521144','76561199445776365','76561199441861018','76561199376834744',
    '76561199445304500','76561199442151591','76561199446121311','76561199445510983','76561199439210939','76561199446744030',
    '76561199441436867','76561199446099786','76561199443493176','76561199446242836','76561199442167681','76561199445568536',
    '76561199437805860','76561199436412951','76561199439615041','76561199445315295','76561199446751464','76561199445942166',
    '76561199439288582','76561199446212886','76561199441428778','76561199441785708','76561199439674404','76561199446487302',
    '76561199441882944','76561199444326822','76561199446174726','76561199445721978','76561199440562272','76561199445481612',
    '76561199441833484','76561199445619763','76561199446114877','76561199446506822','76561199446469652','76561199441894564',
    '76561199446449675','76561199446679834','76561199445740780','76561199378791380','76561199369739543','76561199446595694',
    '76561199443658219','76561199445462176','76561199445776365','76561199442167681','76561199444969390','76561199445635966',
    '76561199447105022','76561199442965739','76561199445792090','76561199446584763','76561199445838719','76561199445510983',
    '76561199445529293','76561199442874114','76561199445927166','76561199440358983','76561199446751464','76561199445568536',
    '76561199437805860','76561199436412951','76561199439288582','76561199445942166','76561199439615041','76561199446212886',
    '76561199436617981','76561199315298137','76561199445410161','76561199446035979','76561199445734740','76561199444648225',
    '76561199446860867','76561199446057025','76561199446113410','76561199441916863','76561199446524441','76561199445424244',
    '76561199445166637','76561199445312516','76561199446627731','76561199445681666','76561199445626485','76561199445252826',
    '76561199441076541','76561199446431511','76561199445315295','76561199442154385','76561199446415788','76561199443876504',
    '76561198318533648','76561198984187653','76561199000166125','76561199446503027','76561199447118700','76561199446202231',
    '76561199465755680','76561198843256060','76561198991706846','76561199445325395','76561199436407503','76561199445512039',
    '76561199266713667','76561199443765323','76561199438109691','76561199443314910','76561199445208970','76561199446227345',
    '76561199443242397','76561199446376519','76561199446551319','76561199444165382','76561199446410540','76561199446524541',
    '76561199445992780','76561199445864171','76561199445597380','76561199447044617','76561199446435332','76561198414178474',
    '76561198808496960','76561198378952217','76561198991098980','76561198991393243','76561198855305321','76561198991832700',
    '76561198807179459','76561198396530119','76561199046121017','76561198991839275','76561198447518392','76561199230676890',
    '76561199475544227','76561199133418244','76561198991295992','76561198991347585','76561198121592392','76561198098929109',
    '76561199474501950','76561198161171164','76561199067710498','76561199093208394','76561199476659190','76561199240034073',
    '76561198991114116','76561198991358283','76561198991386268','76561198427144188','76561199245000815','76561199004584880',
    '76561199262462726','76561198991199268','76561199351908373','76561199143693666','76561199021581210','76561198124833359',
    '76561199042658364','76561199188606389','76561198435353299','76561198353235958','76561198351268289','76561198992348813',
    '76561199240034073','76561199021581210','76561198991114116','76561198991358283','76561198991832700','76561198399199812',
    '76561199123619968','76561198114096119','76561198378952217','76561198803622354','76561198991472451','76561199351908373',
    '76561198991839275','76561199046121017','76561198396530119','76561198382157048','76561198808496960','76561198991393243',
    '76561198991098980','76561198807179459','76561198855305321','76561198067332843','76561198991516650','76561199041361081',
    '76561199407379368','76561199242922897','76561199225281812','76561198880170733','76561199106128168','76561199123560671',
    '76561198991241325','76561198873285494','76561198991471238','76561198991809830','76561199093208394','76561199143693666',
    '76561198447518392','76561198357377473','76561199182967919','76561199100490555','76561198024786156','76561198991533698',
    '76561199004584880','76561199182545176','76561199188178881','76561199446753450','76561199441875577','76561199445397192',
    '76561198991614629','76561198102818581','76561198991527133','76561198991417932','76561198991439150','76561198991253715',
    '76561198991902128','76561199259869070','76561198805056748','76561198945063425','76561198990561252','76561198991542054',
    '76561198991566707','76561198991530037','76561198991464013','76561198991464691','76561198991673121','76561198991081174',
    '76561198991675697','76561198991077037','76561198991579373','76561198991188326','76561199237172673','76561198427144188',
    '76561198991550468','76561198829952463','76561198370108322','76561198382950790','76561199197777499','76561198991493331',
    '76561198991241171','76561198991839275','76561198991098980','76561198991832700','76561199143693666','76561198807179459',
    '76561199351908373','76561198808496960','76561198991393243','76561198855305321','76561199046121017','76561199240034073',
    '76561198991451384','76561198298861935','76561198959372284','76561198991203496','76561198991507615','76561199048220160',
    '76561199160131939','76561198990962671','76561198991586662','76561199064627746','76561199231794362','76561198991483931',
    '76561198102818581','76561199407518771','76561198970542159','76561198991194433','76561198990792333','76561198991550468',
    '76561199237172673','76561198991425672','76561198991417932','76561198991614629','76561198991421961','76561199041671908',
    '76561198991464013','76561198991081174','76561198255356856','76561198991566707','76561198991542054','76561198945063425',
    '76561198991673121','76561198410190615','76561198991514966','76561198991527133','76561199258355572','76561198447518392',
    '76561199404939338','76561199439791372','76561199405011027','76561199440673390','76561199404990963','76561198396530119',
    '76561199021581210',



    
    
]


DATA_FILE = 'friend_data.json'
INIT_FILE = '.initialized'

logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')
logger = logging.getLogger("SteamFriendIDMonitor")

def get_profile_link(steam_id):
    """Generate Steam profile link from Steam ID"""
    return f"steamcommunity.com/profiles/{steam_id}"

async def fetch_friend_list(session, steam_id):
    """Fetch the complete friend list for a Steam account"""
    url = f"http://api.steampowered.com/ISteamUser/GetFriendList/v0001/?key={STEAM_API_KEY}&steamid={steam_id}&relationship=friend"
    profile_link = get_profile_link(steam_id)
    
    try:
        async with session.get(url, timeout=10) as resp:
            if resp.status == 200:
                data = await resp.json()
                friends_data = data.get('friendslist', {}).get('friends', [])
                # Extract just the Steam IDs of friends
                friend_ids = [friend['steamid'] for friend in friends_data]
                return steam_id, profile_link, friend_ids
            elif resp.status == 403:
                logger.warning(f"{profile_link} is private")
                return steam_id, profile_link, None
            else:
                logger.error(f"{profile_link}: API error {resp.status}")
                return steam_id, profile_link, None
    except Exception as e:
        logger.error(f"Error fetching {profile_link}: {e}")
        return steam_id, profile_link, None

async def send_telegram_message(message):
    """Send message to Telegram, splitting if too long"""
    MAX_MESSAGE_LENGTH = 4000  # Leave some buffer under 4096 limit
    
    if len(message) <= MAX_MESSAGE_LENGTH:
        await _send_single_message(message)
    else:
        # Split message into chunks
        lines = message.split('\n')
        current_chunk = ""
        
        for line in lines:
            # If adding this line would exceed limit, send current chunk
            if len(current_chunk + line + '\n') > MAX_MESSAGE_LENGTH:
                if current_chunk:
                    await _send_single_message(current_chunk.strip())
                    current_chunk = line + '\n'
                else:
                    # Single line is too long, truncate it
                    await _send_single_message(line[:MAX_MESSAGE_LENGTH])
            else:
                current_chunk += line + '\n'
        
        # Send remaining chunk
        if current_chunk:
            await _send_single_message(current_chunk.strip())

async def _send_single_message(message):
    """Send a single message to Telegram"""
    url = f"https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/sendMessage"
    payload = {
        'chat_id': TELEGRAM_CHAT_ID,
        'text': message,
        'parse_mode': 'HTML'
    }
    async with aiohttp.ClientSession() as session:
        try:
            async with session.post(url, data=payload) as resp:
                if resp.status != 200:
                    logger.error(f"Failed to send message: {await resp.text()}")
                else:
                    logger.info("Telegram message sent successfully")
        except Exception as e:
            logger.error(f"Telegram error: {e}")

def load_previous_data():
    """Load previous friend data from file"""
    try:
        with open(DATA_FILE, 'r') as f:
            return json.load(f)
    except:
        return {}

def save_data(data):
    """Save friend data to file"""
    with open(DATA_FILE, 'w') as f:
        json.dump(data, f, indent=2)

def is_first_run():
    """Check if this is the first run of the bot"""
    if os.path.exists(INIT_FILE):
        return False
    with open(INIT_FILE, 'w') as f:
        f.write(datetime.now().isoformat())
    return True

async def check_accounts():
    """Main function to check all accounts for friend changes"""
    first_run = is_first_run()
    previous_data = load_previous_data()
    current_data = {}
    all_new_friends = []  # Collect all new friends for batched notification
    
    async with aiohttp.ClientSession() as session:
        tasks = [fetch_friend_list(session, steam_id) for steam_id in STEAM_ACCOUNTS]
        results = await asyncio.gather(*tasks)

    for steam_id, profile_link, friend_ids in results:
        if friend_ids is None:
            continue
            
        current_data[steam_id] = {
            'profile_link': profile_link,
            'friends': friend_ids,
            'count': len(friend_ids)
        }
        
        # Skip change detection on first run
        if first_run or steam_id not in previous_data:
            continue
            
        previous_friends = set(previous_data[steam_id].get('friends', []))
        current_friends = set(friend_ids)
        
        # Check for new friends only
        new_friends = current_friends - previous_friends
        if new_friends:
            for friend_id in new_friends:
                friend_profile_link = get_profile_link(friend_id)
                all_new_friends.append(friend_profile_link)
                logger.info(f"New friend detected: {friend_id} added to {steam_id}")
        
        # Log removed friends (no telegram notification)
        removed_friends = previous_friends - current_friends
        if removed_friends:
            for friend_id in removed_friends:
                logger.info(f"Friend removed: {friend_id} removed from {steam_id}")

    # Send batched notification for all new friends
    logger.info(f"Total new friends collected: {len(all_new_friends)}")
    logger.info(f"First run status: {first_run}")
    
    if all_new_friends and not first_run:
        if len(all_new_friends) == 1:
            msg = f"New friend: {all_new_friends[0]}"
        else:
            msg = f"New friends detected ({len(all_new_friends)}):\n\n"
            msg += "\n".join([f"• {friend_link}" for friend_link in all_new_friends])
        
        logger.info(f"Attempting to send Telegram message: {msg[:100]}...")
        await send_telegram_message(msg)
        logger.info(f"Sent batched notification for {len(all_new_friends)} new friends")
    elif all_new_friends and first_run:
        logger.info(f"New friends detected on first run (not sending notification): {len(all_new_friends)}")
    else:
        logger.info("No new friends detected in this cycle")

    # Save current data
    save_data(current_data)

    if first_run:
        # Log initial setup (no telegram messages)
        total_accounts = len(current_data)
        private_accounts = len(STEAM_ACCOUNTS) - total_accounts
        total_friends = sum(data['count'] for data in current_data.values())
        
        logger.info(f"Steam Friend ID Monitor Setup Complete")
        logger.info(f"Monitoring {total_accounts} accounts")
        logger.info(f"Total friends being tracked: {total_friends}")
        if private_accounts > 0:
            logger.info(f"{private_accounts} accounts are private")
        logger.info("Bot will now notify when specific friends are added with their Steam IDs")
    else:
        logger.info("Friend check completed")

if __name__ == '__main__':
    asyncio.run(check_accounts())
