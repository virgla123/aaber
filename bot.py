import os
import json
import asyncio
import aiohttp
import logging
from datetime import datetime
import random
import time

# Configuration
TELEGRAM_BOT_TOKEN = os.environ.get('TELEGRAM_BOT_TOKEN', '')
TELEGRAM_CHAT_ID = os.environ.get('TELEGRAM_CHAT_ID', '')
STEAM_API_KEY = os.environ.get('STEAM_API_KEY', '')


STEAM_ACCOUNTS = [

    
    '76561197997028404','76561198010608505','76561197995348064','76561198027225409','76561198087297348','76561198033115279',
    '76561198079929540','76561198101608719','76561198165806979','76561198102885877','76561198214306592','76561198034408524',
    '76561198199512505','76561198262845266','76561198212373968','76561198271116426','76561198258289087','76561198016322289',
    '76561198283520257','76561198197435149','76561198113445521','76561198393861053','76561198152211922','76561198153784679',
    '76561198133868972','76561198206080048','76561198251214896','76561198120343724','76561198170788785','76561198160799267',
    '76561198150055795','76561198052391770','76561198121237658','76561198262275145','76561198893140741','76561198799269590',
    '76561198241926262','76561198197600818','76561198840655497','76561198859163957','76561198345437523','76561198366194054',
    '76561198345041158','76561198374688071','76561198150826247','76561198362919361','76561198254060503','76561198398725087',
    '76561198262917719','76561198161999383','76561198988129034','76561198856908589','76561198388427126','76561198584383020',
    '76561198969151592','76561198271310542','76561198839498501','76561198813865423','76561198850917515','76561198908525837',
    '76561198876158184','76561198881772686','76561198449618981','76561198948231515','76561198815965686','76561198813173189',
    '76561198853628000','76561198292932889','76561198958119408','76561198440017791','76561198950299533','76561198851287707',
    '76561198798153445','76561198842010196','76561198874615919','76561198408099499','76561198380128863','76561198799710966',
    '76561198401232954','76561198811520422','76561198328268217','76561198969038414','76561198866247742','76561198370186657',
    '76561198810413486','76561198432916219','76561198835864498','76561198803672914','76561198869496180','76561198875839774',
    '76561198877616862','76561198936673187','76561198427808098','76561198880457893','76561198935875224','76561198118222557',
    '76561198338092421','76561198206178276','76561197991531660','76561197979012706','76561198004976810','76561197992938057',
    '76561198001623622','76561198385712103','76561198037787857','76561198005698162','76561198018823565',
    '76561198046315252','76561198288809723','76561198977533205','76561198249712750','76561198354146673','76561197987030746',
    '76561197993482972','76561197997171109','76561197999889528','76561198008535006','76561198010722601','76561198030223034',
    '76561198020168829','76561198013750615','76561198062537256','76561198180890550','76561198148875417','76561198049811674',
    '76561198860958937','76561198344486567','76561198355563061','76561198381298151','76561198254110089','76561198282255154',
    '76561198833792958','76561198310302063','76561198276342567','76561198142355472','76561198108221056','76561198069147103',
    '76561197989143464','76561197990318614','76561198003127315','76561198001216683','76561197998424730','76561198007599050',
    '76561198032674780','76561198013797596','76561198017675454','76561198035314895','76561198204104416','76561198083854959',
    '76561199001194976','76561198800017819','76561198796026462','76561198207755559','76561198274787266','76561198952470129',
    '76561198331262300','76561198195145282','76561197977303576','76561197995279803','76561198002716679','76561198001094806',
    '76561198080145367','76561198013072288','76561198044529106','76561198012412170','76561198028621775','76561198012273602',
    '76561198841341084','76561198053160675','76561198087868387','76561198297244107','76561198157129823','76561198996054101',
    '76561198978727834','76561198440480389','76561198964342821','76561198266094488','76561198208723744','76561198126278816',
    '76561198102856479','76561197977830137','76561197996693344','76561198008816742','76561198002295348',
    '76561198182823025','76561198001483507','76561198008547848','76561198018347088','76561198055119851','76561198014821181',
    '76561198012958988','76561198021881923','76561198110772539','76561198041403773','76561198075873318','76561198179203018',
    '76561198272740044','76561198314988589','76561198298356831','76561198888303335','76561199014713266','76561198435771387',
    '76561198439776811','76561198015066798','76561198069244425','76561198035677334','76561198025960084','76561198013129575',
    '76561198014373302','76561198019240186','76561198040922078','76561197997882074','76561198007508343','76561198010283178',
    '76561198042906679','76561198009688189','76561197976169768','76561198137993127','76561198172235266','76561198107180896',
    '76561198143233564','76561198102491591','76561198197966341','76561198440627935','76561198305892582','76561198833190282',
    '76561198860457381','76561198452841482','76561197984841056','76561198007401372','76561198003513381','76561197994452416',
    '76561197996758309','76561198003771666','76561198006591398','76561198001440325','76561198003193868','76561198023935313',
    '76561198014548025','76561198083562997','76561198064626913','76561198158128751','76561198125991142','76561198283925983',
    '76561198282753291','76561198354778084','76561198309592646','76561198452497847','76561198997699593','76561198986482331',
    '76561197976143457','76561197976765097','76561197973828580','76561197999145108',
    '76561197997876163','76561198006185502','76561198005605996','76561198009739407','76561198039156334','76561198026527136',
    '76561198018846681','76561198058202337','76561198139999761','76561198329452447','76561198291847395',
    '76561198118875320','76561198139738159','76561198345891257','76561198244239762',
    '76561198807733828','76561198806829168','76561198358113730','76561198985804103','76561198001338332',
    '76561198006080645','76561197993163677','76561198011543621','76561197998415100','76561197998010202',
    '76561198354146777','76561198020643402','76561198016755309','76561198023342404','76561198031482020','76561198021537356',
    '76561198278739274','76561198063200569','76561198098171375','76561198396035961','76561198289868523',
    '76561198307626121','76561198279562938','76561198341323801','76561198268930537','76561199008273572',
    '76561198350735066','76561198196236185','76561197983490323','76561198006892691',
    '76561197995296315','76561198009736254','76561198010992945','76561198003016895',
    '76561198005006485','76561198026201877','76561198024737693','76561198018791091','76561198017755497',
    '76561198087627753','76561198301232825','76561198076440577','76561198079340269','76561198155545898','76561198476282868',
    '76561198412334125','76561198174386002','76561198299846562','76561198873937370','76561198826263451',
    '76561198802982064','76561198871249356','76561198921071018','76561198133025528',
    '76561198001238549','76561198010379443','76561197995697804','76561197999906512','76561197997260651',
    '76561198016731098','76561198050191376','76561198160970464','76561198013328012','76561198017652475',
    '76561198277566687','76561198064250315','76561198205471745','76561198166038448','76561198199794545',
    '76561198349157302','76561198323570955','76561198285148413','76561198963471953','76561198855606954',
    '76561198996856821','76561197999496637','76561197995598353','76561197991716825','76561198004203344','76561197999109192',
    '76561197997463387','76561198000835839','76561198012256029','76561198038171602','76561198012074374','76561198019907370',
    '76561198023687343','76561198016036860','76561198160685695',
    '76561198082434530','76561198056703060','76561198074663440','76561198053526594','76561198160826143',
    '76561198275314093','76561198829992238','76561198301903862','76561198872463234',
    '76561198295659994','76561197992210307','76561197997054855',
    '76561198001025934','76561198011053033','76561197994089294','76561198004386971','76561198012759581',
    '76561198135079894','76561198013763475','76561198058506481','76561198019029139','76561198030970023','76561198022757349',
    '76561198107203552','76561198969741770','76561198223339116','76561198976869190','76561198210167351','76561198397008196',
    '76561198280976015','76561198974669610','76561198982868209','76561198009518605',
    '76561198002095277','76561197992371935','76561198007392255','76561198005136674','76561198003970044',
    '76561197997444562','76561198001761621','76561198016293739','76561198016813096','76561198024598267',
    '76561198076222197','76561198049205148','76561198154849054','76561198181700707',
    '76561198158288736','76561198097237856','76561198137327839','76561198119809267','76561198355872032',
    '76561198354016939','76561198339205514','76561198820099428','76561198799376111','76561198977201499',
    '76561198011066116','76561197996779428','76561198009482058','76561197999088657','76561198001462762','76561197999667321',
    '76561198000525041','76561197999067593','76561198013310929','76561198026501823','76561198019339709',
    '76561198025123215','76561198061053035','76561198014043535','76561198066745842','76561198067052666',
    '76561198135715780','76561198338709689','76561198313284270','76561198172747945',
    '76561198311780119','76561198861138359','76561198295705578','76561198239965358','76561198433575375',
    '76561199014135442','76561199663438222','76561197993541812','76561198010822863','76561197997928659',
    '76561197996934676','76561198003970014','76561198004577334','76561198031038673','76561198014984981',
    '76561198013109173','76561198018953784','76561198024551347','76561198029872969','76561198267633619','76561198011892746',
    '76561198280007064','76561198118585638','76561198125151451','76561198315677603','76561198296099617',
    '76561198358908847','76561198347039034','76561198338904054','76561198341285367','76561198866562404',
    '76561197979865780','76561198002329336','76561198005509578','76561197995937526',
    '76561198007325538','76561197999809124','76561197997124419','76561198022007117','76561198031321820','76561198017236129',
    '76561198230481784','76561198077476780','76561198064728319','76561198093078260','76561198295710998',
    '76561198122916953','76561198353046056','76561198358422386','76561198964188774',
    '76561198873273729','76561198799573029','76561199008986957','76561197971471010','76561197983805563',
    '76561198059390379','76561197979939955','76561197984075943','76561197999093886',
    '76561197998222518','76561198115245195','76561198004355556','76561198017405722',
    '76561198013153645','76561198012538044','76561198305115475','76561198048758742','76561198024316244','76561198079279730',
    '76561198078194593','76561198107914588','76561198368483759','76561198453611563','76561198446475166',
    '76561198440137898','76561198153070473','76561198019329187','76561197994657617','76561197992459733',
    '76561198009885112','76561197997841778','76561198003644345','76561198011676000','76561198018822155','76561198025818281',
    '76561198014169429','76561198074953302','76561198018087635','76561198074935597',
    '76561198089979040','76561198065059757','76561198136376438','76561198115720925','76561198202208842','76561198045142997',
    '76561198924191408','76561198361685679','76561198330881718','76561198865867873',
    '76561197988627170','76561197986085747','76561197976451953','76561197998660814',
    '76561198002049557','76561197994098764','76561198009252567','76561197991216273','76561198000738752','76561198025001738',
    '76561198023880384','76561198026579040','76561198047827595','76561198092493378','76561198078790393',
    '76561198070322927','76561198050652785','76561198149769977','76561198351572790',
    '76561198395186246','76561198293474232','76561198962811564','76561199006029315','76561198913214349',
    '76561198973696611','76561198147124934','76561197975417534','76561197998635763','76561198001297003',
    '76561197996799371','76561197992745906','76561198013521990','76561198024322850','76561198017866433',
    '76561198012477930','76561198015267377','76561198017208932','76561198091385880','76561198072182232',
    '76561198082908837','76561198053443649','76561198204240060','76561198347315971',
    '76561198358941738','76561198833511986','76561198263553211','76561198421250478','76561198833892662',
    '76561198442013365','76561198984968098','76561197978758213','76561197996250503','76561197991067022','76561198000847590',
    '76561197999755934','76561198012506867','76561198012241496','76561198295716149',
    '76561198055388890','76561198025623524','76561198021080299','76561198012606479','76561198066488714',
    '76561198091497786','76561198080415161','76561198157989677','76561198095892699','76561198204970644',
    '76561198105878251','76561198274326392','76561198869709290','76561198821783923','76561198959972925',
    '76561198874748433','76561199439232924','76561199437315148','76561199370442120','76561199376259976','76561199442992514',
    '76561199422866221','76561199371384511','76561199444007754','76561199376333122','76561199385174708','76561199376231456',
    '76561199436039640','76561199567429048','76561199435562102','76561199376177541','76561199376077570','76561199443514777',
    '76561199393175860','76561199375916779','76561199441897041','76561199443682764','76561199438374094','76561199439709202',
    '76561199376204563','76561199443254879','76561199438571951','76561199442806079','76561199434845161','76561199424275491',
    '76561199434842936','76561199441605843','76561199404790155','76561199405228371','76561199416592488','76561199405082116',
    '76561199442022128','76561199372920303','76561199434855530','76561199435186266','76561199394717896','76561199405116705',
    '76561199393770489','76561199404536478','76561199440524847','76561199233518558','76561199446818307','76561199404971171',
    '76561199214478296','76561199442600407','76561199440800308','76561199285626957','76561199439386897','76561199395286530',
    '76561199404781649','76561199392189555','76561199425424436','76561199404710863','76561199442368171','76561199371741399',
    '76561199443160128','76561199330746345','76561199423050694','76561199405295532','76561199370281123','76561199268156938',
    '76561199405067338','76561199404647002','76561199439990839','76561199405090881','76561199132573781','76561199441599692',
    '76561199443562228','76561199405078917','76561199176050121','76561199435031474','76561199440733051','76561199441824491',
    '76561199443711151','76561199405317257','76561199439866130','76561199440667328','76561199442176292','76561199256508848',
    '76561199406869720','76561199404959682','76561199436328913','76561199405158192','76561199394043947','76561199229042013',
    '76561199435561738','76561199352707593','76561199405029173','76561199405003949','76561199439150415','76561199405003005',
    '76561199439101365','76561199442229051','76561199442058653','76561199267804147','76561199443619131','76561199024471670',
    '76561199439874070','76561199442454433','76561199441916310','76561199267660180','76561199442276849','76561199441944808',
    '76561199441924956','76561199404722500','76561199267580118','76561199442469381','76561199439514111','76561199404627167',
    '76561199392002707','76561199405078344','76561199435939166','76561199443061489','76561199441560910','76561199405379847',
    '76561199437368407','76561199441647217','76561199404734276','76561199416578239','76561199439641359','76561199442622127',
    '76561199441882546','76561199443230379','76561199442189206','76561199416068815','76561199440642037','76561199405258465',
    '76561199440733502','76561199443022777','76561199442915059','76561199442052654','76561199443496290','76561199441910454',
    '76561199405303017','76561199443359793','76561199404798621','76561199388678529','76561199404890519','76561199383932354',
    '76561199405020872','76561199285660683','76561199438856481','76561199422696446','76561199404966126','76561199404456787',
    '76561199441898476','76561199440940431','76561199405168551','76561199443120505','76561199405037720','76561199443679582',
    '76561199404913401','76561199376245336','76561199376148812','76561199466438728','76561199443542896','76561199442345550',
    '76561199285292740','76561199442856183','76561199441922706','76561199441019732','76561199401086140','76561199404871708',
    '76561199441297379','76561199405082202','76561199405372631','76561199439939031','76561199404949511','76561199442091813',
    '76561199285989004','76561199439970949','76561199443275790','76561199405294340','76561199442157554','76561199442201867',
    '76561199434980308','76561199389653077','76561199438295824','76561199439298967','76561199404984050','76561199444793320',
    '76561199441926176','76561199439632181','76561199388359614','76561199379316956','76561199443085552','76561199442896865',
    '76561199388984356','76561199416597150','76561199443572284','76561199405414458','76561199445888191','76561199441716070',
    '76561199439515208','76561199441659146','76561199440031754','76561199442149719','76561199439310396','76561199404996286',
    '76561199441870105','76561199442893249','76561199377039992','76561199440930445','76561199443149716','76561199442289358',
    '76561199443395247','76561199437672212','76561199442100806','76561199257344632','76561199442704279','76561199440852405',
    '76561199023016686','76561199443015724','76561199375362739','76561199441874758','76561199440593678','76561199442335481',
    '76561199405154999','76561199438961902','76561199446417760','76561199441749104','76561199378497514','76561199443424303',
    '76561199443047038','76561199218567141','76561199438309480','76561199240776268','76561199446099196','76561199380390197',
    '76561199442235793','76561199439927308','76561199434835272','76561199405092460','76561199346965630','76561199234120870',
    '76561199444045925','76561199416144546','76561199439166777','76561199388159971','76561199441209431','76561199243509316',
    '76561199405132722','76561199440869780','76561199404444232','76561199435710668','76561199442800942','76561199443870075',
    '76561199380246133','76561199405058401','76561199422826663','76561199405069410','76561199442858229','76561199442227092',
    '76561199439768028','76561199439546013','76561199369345938','76561199442711773','76561199214600669','76561199443288735',
    '76561199439860569','76561199442247388','76561199442203157','76561199253980645','76561199404945669','76561199443121584',
    '76561199405446565','76561199442794653','76561199257082232','76561199443232485','76561199443333777','76561199440985525',
    '76561199441155303','76561199442527935','76561199439607573','76561199445045096','76561199439650571','76561199440668114',
    '76561199405327723','76561199376153212','76561199434853315','76561199405041962','76561199442532398','76561199267807536',
    '76561199213029794','76561199214590791','76561199214886401','76561199228973343','76561199240729494','76561199267660613',
    '76561199012254922','76561199233888115','76561199240782281','76561199176071487','76561199191822734','76561199176514132',
    '76561199192218019','76561199439760327','76561199441428778','76561199446521986','76561199446765074','76561199446526854',
    '76561199446500764','76561199446208319','76561199445795416','76561199444789424','76561199445549744','76561199446151978',
    '76561199441804979','76561199441570253','76561199447063172','76561199439674404','76561199445619763','76561199446114877',
    '76561199446506822','76561199446449675','76561199440562272','76561199445165787','76561199445555124','76561199446602970',
    '76561199436804129','76561199441894564','76561199441518293','76561199437531536','76561199439727831','76561199445314210',
    '76561199446275827','76561199444967519','76561199445382435','76561199446017527','76561199446416162','76561199443639592',
    '76561199445394247','76561199446174131','76561199443950027','76561199446166760','76561199444355745','76561199437654822',
    '76561199439206764','76561199447339695','76561199447077130','76561199445789791','76561199444492691','76561199436332692',
    '76561199445414514','76561199444521144','76561199445776365','76561199441861018','76561199376834744','76561199445304500',
    '76561199442151591','76561199446121311','76561199445510983','76561199439210939','76561199446744030','76561199441436867',
    '76561199446099786','76561199443493176','76561199446242836','76561199442167681','76561199445568536','76561199437805860',
    '76561199436412951','76561199439615041','76561199445315295','76561199446751464','76561199445942166','76561199439288582',
    '76561199446212886','76561199441785708','76561199446487302','76561199441882944','76561199444326822','76561199446174726',
    '76561199445721978','76561199445481612','76561199441833484','76561199446469652','76561199446679834','76561199445740780',
    '76561199378791380','76561199369739543','76561199446595694','76561199443658219','76561199445462176','76561199444969390',
    '76561199445635966','76561199447105022','76561199442965739','76561199445792090','76561199446584763','76561199445838719',
    '76561199445529293','76561199442874114','76561199445927166','76561199440358983','76561199436617981','76561199445410161',
    '76561199446035979','76561199445734740','76561199444648225','76561199446860867','76561199446057025','76561199446113410',
    '76561199441916863','76561199446524441','76561199445424244','76561199445166637','76561199445312516','76561199446627731',
    '76561199445681666','76561199445626485','76561199445252826','76561199441076541','76561199446431511','76561199442154385',
    '76561199446415788','76561199443876504','76561198318533648','76561198984187653','76561199000166125','76561199446503027',
    '76561199447118700','76561199446202231','76561199465755680','76561198843256060','76561199445325395','76561199436407503',
    '76561199445512039','76561199266713667','76561199443765323','76561199438109691','76561199443314910','76561199445208970',
    '76561199446227345','76561199443242397','76561199446376519','76561199446551319','76561199444165382','76561199446410540',
    '76561199446524541','76561199445992780','76561199445864171','76561199445597380','76561199447044617','76561199446435332',
    '76561198414178474','76561198808496960','76561198378952217','76561198991098980','76561198991393243','76561198855305321',
    '76561198991832700','76561198807179459','76561198396530119','76561199046121017','76561198991839275','76561198447518392',
    '76561199230676890','76561199475544227','76561199133418244','76561198991295992','76561198991347585','76561198121592392',
    '76561198098929109','76561199474501950','76561198161171164','76561199067710498','76561199093208394','76561199476659190',
    '76561199240034073','76561198991114116','76561198991358283','76561198991386268','76561198427144188','76561199245000815',
    '76561199004584880','76561199262462726','76561198991199268','76561199351908373','76561199143693666','76561199021581210',
    '76561198124833359','76561199042658364','76561199188606389','76561198435353299','76561198353235958','76561198351268289',
    '76561198992348813','76561198399199812','76561199123619968','76561198114096119','76561198803622354','76561198991472451',
    '76561198382157048','76561198067332843','76561198991516650','76561199041361081','76561199407379368','76561199242922897',
    '76561199225281812','76561198880170733','76561199106128168','76561199123560671','76561198991241325','76561198873285494',
    '76561198991471238','76561198991809830','76561198357377473','76561199182967919','76561199100490555','76561198024786156',
    '76561198991533698','76561199182545176','76561199188178881','76561199446753450','76561199441875577','76561199445397192',
    '76561198991614629','76561198102818581','76561198991527133','76561198991417932','76561198991439150','76561198991253715',
    '76561198991902128','76561199259869070','76561198805056748','76561198945063425','76561198990561252','76561198991542054',
    '76561198991566707','76561198991530037','76561198991464013','76561198991464691','76561198991673121','76561198991081174',
    '76561198991675697','76561198991077037','76561198991579373','76561198991188326','76561199237172673','76561198991550468',
    '76561198829952463','76561198370108322','76561198382950790','76561199197777499','76561198991493331','76561198991241171',
    '76561198991451384','76561198298861935','76561198959372284','76561198991203496','76561198991507615','76561199048220160',
    '76561199160131939','76561198990962671','76561198991586662','76561199064627746','76561199231794362','76561198991483931',
    '76561199407518771','76561198970542159','76561198991194433','76561198990792333','76561198991425672','76561198991421961',
    '76561199041671908','76561198255356856','76561198410190615','76561198991514966','76561199258355572','76561199404939338',
    '76561199439791372','76561199405011027','76561199440673390','76561199404990963','76561198991377201','76561198990952838',
    '76561198991203789','76561198991461281','76561198991248135','76561198990969521','76561198991127592','76561198991795252',
    '76561198991279799','76561198991300503','76561198991161919','76561198991040871','76561198991397713','76561198991379863',
    '76561198991552866','76561198990863874','76561198991242607','76561198991294475','76561198991712315','76561198991402939',
    '76561198991198681','76561198991584835','76561198991035543','76561198991547255','76561198991057972','76561198991226872',
    '76561198991027278','76561198990985872','76561198991281956','76561198990808354','76561198991098685','76561198991474357',
    '76561198991470762','76561198991320182','76561198991550984','76561198991308274','76561198991116394','76561198991068767',
    '76561198991167652','76561198991183088','76561198991317706','76561198991146081','76561198991250364','76561198991003409',
    '76561198991103392','76561198991296575','76561198991624128','76561198990802707','76561198990906165','76561198991063842',
    '76561198991258589','76561198991203116','76561198991322928','76561198991436515','76561198991160868','76561198991250852',
    '76561198991144111','76561198990897248','76561198991024363','76561198991314502','76561198991390080','76561198991453348',
    '76561198991150418','76561198991189775','76561198991181796','76561198991166056','76561198991081546','76561198991138122',
    '76561198991318743','76561198991231844','76561198991043038','76561198991269286','76561198990799106','76561198991398395',
    '76561198990903503','76561198991390127','76561198991848779','76561198991072866','76561198991646164','76561198991063417',
    '76561198991270143','76561198991760204','76561198991279720','76561198991114013','76561198991483451','76561198991337419',
    '76561198991647959','76561198991008444','76561198991568783','76561198991633394','76561198991327656','76561198991043410',
    '76561198991028845','76561198991243167','76561198991287313','76561198991237571','76561198991137664','76561198991094902',
    '76561198991176934','76561198991337306','76561198991040455','76561198991326623','76561198991220788','76561198991250698',
    '76561198991221576','76561198991093149','76561198991125031','76561198991552133','76561198991283532','76561198991155832',
    '76561198990842663','76561198991044956','76561198991393379','76561198991359244','76561198991160314','76561199404795959',
    '76561198991332262','76561198991343365','76561198991779023','76561198991524144','76561198991176320','76561198991699197',
    '76561198990922122','76561198991144153','76561198990998261','76561198991083050','76561198991158944','76561198991011263',
    '76561198991026816','76561198991357094','76561198991460124','76561198991062207','76561198991215745','76561198992047093',
    '76561198991052969','76561198991305685','76561198991342338','76561198991305609','76561198991646383','76561198990984514',
    '76561198991336718','76561198991272168','76561198991159989','76561198990891257','76561198991338025','76561198990428868',
    '76561198991244602','76561198991228786','76561198991156468','76561198991660858','76561198991422981','76561198991188094',
    '76561198990834369','76561198991595593','76561198991259301','76561198991588536','76561198991170863','76561198991232191',
    '76561198991037522','76561198991169032','76561198990980553','76561198991000513','76561198991108300','76561198990933351',
    '76561198991144823','76561198991504802','76561198991435727','76561198990966654','76561198991266226','76561198991349177',
    '76561198991210077','76561198991383529','76561198990993362','76561198991106928','76561198991246142','76561198991342372',
    '76561198991174538','76561198991031765','76561198991488742','76561198991200030','76561198990866041','76561198991324004',
    '76561198990803440','76561198991274933','76561198991226757','76561198990863261','76561198991870843','76561198991296229',
    '76561198991246321','76561198991519874','76561198990949828','76561198991398704','76561198991142923','76561198991304544',
    '76561198990962426','76561198991180876','76561198991064138','76561198990806975','76561198990796403','76561198991584874',
    '76561198991246769','76561198991538330','76561198991156994','76561198991141150','76561198991351373','76561198991001607',
    '76561198991368490','76561198991472491','76561198991089001','76561198991375838','76561198991043804','76561198991572274',
    '76561198991061971','76561198991000954','76561198991016654','76561198991738017','76561198991163026','76561198991089386',
    '76561198991369534','76561198991192312','76561198990947361','76561198991161107','76561198991328346','76561198991352550',
    '76561198991149053','76561198991102231','76561198991531435','76561198991441814','76561198991072537','76561198991047376',
    '76561198991519024','76561198991162727','76561198991373580','76561198991357490','76561198991090253','76561198991153283',
    '76561198991348585','76561198991082586','76561198991254302','76561198991132260','76561198991285052','76561198990850101',
    '76561198991596772','76561198991004591','76561198991270734','76561198991536951','76561198991324307','76561198991219850',
    '76561198991003380','76561198991353417','76561198991133079','76561198991518836','76561198991137652','76561198990896805',
    '76561198991060549','76561198991776659','76561198990854593','76561198991553058','76561198990964336','76561198990978474',
    '76561198991430412','76561198991085006','76561198990823751','76561198991509962','76561198990824882','76561198991083122',
    '76561198990950080','76561198991285305','76561198991559604','76561198991453623','76561198991272786','76561198991190096',
    '76561198991467689','76561198991479964','76561198991278512','76561198991042071','76561198991026028','76561198991013042',
    '76561198991546187','76561198991269969','76561198990922910','76561198991241314','76561198991648870','76561198990850952',
    '76561198991401191','76561198990960934','76561198991336243','76561198991606947','76561198991623935','76561198991758698',
    '76561198990983529','76561198991295248','76561198991175161','76561198991148172','76561198991700731','76561198991705478',
    '76561198991078973','76561198991366512','76561198991181630','76561198991327043','76561198991545088','76561198991062463',
    '76561198991140962','76561198990990597','76561198991102933','76561198991177706','76561198991395578','76561198991093346',
    '76561198991441592','76561198991021307','76561198991085722','76561198990847143','76561198991226836','76561198991526078',
    '76561198991154552','76561198991148611','76561198991058802','76561198991195303','76561198991547937','76561198990911287',
    '76561198990993271','76561198991156736','76561198991354299','76561198991250860','76561198991298739','76561198991333505',
    '76561198991295365','76561198991166163','76561198991228801','76561198991216382','76561198991038045','76561198991506759',
    '76561198991177659','76561198991290910','76561198991360421','76561198991154650','76561198991518233','76561198991178106',
    '76561198991156620','76561197997743127','76561198004204548','76561197999312453','76561198006048480','76561197997859974',
    '76561197997694886','76561198014327198','76561198012231468','76561198013538714','76561198008558537','76561198020742151',
    '76561198009040001','76561198005474154','76561198012054094','76561198013171224','76561198015179137','76561198016310374',
    '76561198005868300','76561198019726052','76561198018875589','76561198013951657','76561198014598481','76561198019250290',
    '76561198020396708','76561198012911519','76561198016021104','76561198023330976','76561198019197538','76561198019371029',
    '76561198018882306','76561198012511030','76561198021566030','76561198017473556','76561198017057540','76561198022848467',
    '76561198004273612','76561198015765005','76561198020571461','76561198005460097','76561198012498614','76561198010331103',
    '76561198024707377','76561198019947181','76561198019278803','76561198014584863','76561198020826507','76561198020403756',
    '76561198011632392','76561198017053854','76561199498199285','76561199501987269','76561199498027961','76561199500931077',
    '76561199501484796','76561199497827252','76561199501531356','76561199501291799','76561199501524891','76561199498000986',
    '76561199501388665','76561199501206875','76561199501257918','76561199497613812','76561199501033581','76561199501463034',
    '76561199500842050','76561199501591291','76561199501364455','76561199501180732','76561199498042396','76561199497829431',
    '76561199498282125','76561199501095215','76561199498121843','76561199501578023','76561199501529709','76561199500814855',
    '76561199497818632','76561199501166170','76561199498315014','76561199498309640','76561199501021983','76561199497475320',
    '76561199498040174','76561199501360697','76561199500970660','76561199501684825','76561199501496368','76561199498336858',
    '76561199498096913','76561199501769992','76561199501472774','76561199501312970','76561199498846667','76561199497765314',
    '76561199501028600','76561199498181451',


    
]


DATA_FILE = 'friend_data.json'
INIT_FILE = '.initialized'

# Optimized rate limiting configuration for speed
MAX_CONCURRENT_REQUESTS = 50  # High concurrency
REQUEST_DELAY = 0.1  # Very short delay between requests
BURST_SIZE = 100  # Allow bursts of requests
BURST_DELAY = 5  # Pause after each burst
MAX_RETRIES = 2  # Limit retries to keep speed up

logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')
logger = logging.getLogger("SteamFriendIDMonitor")

class FastRateLimiter:
    def __init__(self, max_concurrent=50, burst_size=100, burst_delay=5):
        self.semaphore = asyncio.Semaphore(max_concurrent)
        self.burst_size = burst_size
        self.burst_delay = burst_delay
        self.request_count = 0
        self.last_burst_reset = None
        self.loop = None
    
    async def acquire(self):
        if self.loop is None:
            self.loop = asyncio.get_event_loop()
            self.last_burst_reset = self.loop.time()
        
        await self.semaphore.acquire()
        
        # Check if we need to pause after a burst
        self.request_count += 1
        if self.request_count >= self.burst_size:
            current_time = self.loop.time()
            time_since_reset = current_time - self.last_burst_reset
            
            if time_since_reset < self.burst_delay:
                sleep_time = self.burst_delay - time_since_reset
                logger.debug(f"Burst limit reached, sleeping for {sleep_time:.2f}s")
                await asyncio.sleep(sleep_time)
            
            self.request_count = 0
            self.last_burst_reset = self.loop.time()
        
        # Small delay to prevent hammering
        await asyncio.sleep(0.05 + random.uniform(0, 0.05))
    
    def release(self):
        self.semaphore.release()

# Rate limiter will be created inside the main function

def get_profile_link(steam_id):
    """Generate Steam profile link from Steam ID"""
    return f"steamcommunity.com/profiles/{steam_id}"

async def fetch_friend_list(session, steam_id, rate_limiter, retry_count=0):
    """Fetch the complete friend list for a Steam account with optimized rate limiting"""
    url = f"http://api.steampowered.com/ISteamUser/GetFriendList/v0001/?key={STEAM_API_KEY}&steamid={steam_id}&relationship=friend"
    profile_link = get_profile_link(steam_id)
    
    await rate_limiter.acquire()
    try:
        async with session.get(url, timeout=10) as resp:
            if resp.status == 200:
                data = await resp.json()
                friends_data = data.get('friendslist', {}).get('friends', [])
                friend_ids = [friend['steamid'] for friend in friends_data]
                return steam_id, profile_link, friend_ids
            elif resp.status == 403:
                logger.debug(f"{profile_link} is private")
                return steam_id, profile_link, None
            elif resp.status in [429, 420]:
                if retry_count < MAX_RETRIES:
                    # Exponential backoff for rate limits
                    delay = (2 ** retry_count) + random.uniform(0, 1)
                    logger.warning(f"{profile_link}: Rate limited, retrying in {delay:.2f}s")
                    await asyncio.sleep(delay)
                    return await fetch_friend_list(session, steam_id, rate_limiter, retry_count + 1)
                else:
                    logger.error(f"{profile_link}: Max retries exceeded for rate limit")
                    return steam_id, profile_link, None
            else:
                logger.warning(f"{profile_link}: API error {resp.status}")
                return steam_id, profile_link, None
    except asyncio.TimeoutError:
        logger.warning(f"Timeout fetching {profile_link}")
        return steam_id, profile_link, None
    except Exception as e:
        logger.warning(f"Error fetching {profile_link}: {e}")
        return steam_id, profile_link, None
    finally:
        rate_limiter.release()

async def send_telegram_message(message):
    """Send message to Telegram, splitting if too long"""
    MAX_MESSAGE_LENGTH = 4000
    
    if len(message) <= MAX_MESSAGE_LENGTH:
        await _send_single_message(message)
    else:
        lines = message.split('\n')
        current_chunk = ""
        
        for line in lines:
            if len(current_chunk + line + '\n') > MAX_MESSAGE_LENGTH:
                if current_chunk:
                    await _send_single_message(current_chunk.strip())
                    current_chunk = line + '\n'
                else:
                    await _send_single_message(line[:MAX_MESSAGE_LENGTH])
            else:
                current_chunk += line + '\n'
        
        if current_chunk:
            await _send_single_message(current_chunk.strip())

async def _send_single_message(message):
    """Send a single message to Telegram"""
    url = f"https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/sendMessage"
    payload = {
        'chat_id': TELEGRAM_CHAT_ID,
        'text': message,
        'parse_mode': 'HTML'
    }
    async with aiohttp.ClientSession() as session:
        try:
            async with session.post(url, data=payload) as resp:
                if resp.status != 200:
                    logger.error(f"Failed to send message: {await resp.text()}")
                else:
                    logger.info("Telegram message sent successfully")
        except Exception as e:
            logger.error(f"Telegram error: {e}")

def load_previous_data():
    """Load previous friend data from file"""
    try:
        with open(DATA_FILE, 'r') as f:
            return json.load(f)
    except:
        return {}

def save_data(data):
    """Save friend data to file"""
    with open(DATA_FILE, 'w') as f:
        json.dump(data, f, indent=2)

def is_first_run():
    """Check if this is the first run of the bot"""
    if os.path.exists(INIT_FILE):
        return False
    with open(INIT_FILE, 'w') as f:
        f.write(datetime.now().isoformat())
    return True

async def check_accounts():
    """Main function to check all accounts for friend changes - optimized for speed"""
    start_time = time.time()
    first_run = is_first_run()
    previous_data = load_previous_data()
    current_data = {}
    all_new_friends = []
    
    # Create rate limiter inside the async function
    rate_limiter = FastRateLimiter(MAX_CONCURRENT_REQUESTS, BURST_SIZE, BURST_DELAY)
    
    logger.info(f"Starting fast check for {len(STEAM_ACCOUNTS)} accounts...")
    
    # Optimized session configuration for high throughput
    connector = aiohttp.TCPConnector(
        limit=200,  # High connection pool
        limit_per_host=100,  # High per-host limit
        ttl_dns_cache=300,  # DNS cache
        use_dns_cache=True,
        keepalive_timeout=30,
        enable_cleanup_closed=True
    )
    
    timeout = aiohttp.ClientTimeout(total=15, connect=5)
    
    async with aiohttp.ClientSession(
        connector=connector, 
        timeout=timeout,
        headers={'User-Agent': 'SteamFriendMonitor/1.0'}
    ) as session:
        
        # Create all tasks at once for maximum concurrency
        tasks = [fetch_friend_list(session, steam_id, rate_limiter) for steam_id in STEAM_ACCOUNTS]
        
        # Progress tracking
        completed = 0
        total = len(tasks)
        
        # Process all requests concurrently with progress updates
        for coro in asyncio.as_completed(tasks):
            try:
                steam_id, profile_link, friend_ids = await coro
                completed += 1
                
                # Progress update every 500 accounts
                if completed % 500 == 0 or completed == total:
                    elapsed = time.time() - start_time
                    rate = completed / elapsed
                    eta = (total - completed) / rate if rate > 0 else 0
                    logger.info(f"Progress: {completed}/{total} ({completed/total*100:.1f}%) - {rate:.1f} req/s - ETA: {eta:.1f}s")
                
                if friend_ids is None:
                    continue
                    
                current_data[steam_id] = {
                    'profile_link': profile_link,
                    'friends': friend_ids,
                    'count': len(friend_ids)
                }
                
                # Skip change detection on first run
                if first_run or steam_id not in previous_data:
                    continue
                    
                previous_friends = set(previous_data[steam_id].get('friends', []))
                current_friends = set(friend_ids)
                
                # Check for new friends only
                new_friends = current_friends - previous_friends
                if new_friends:
                    for friend_id in new_friends:
                        friend_profile_link = get_profile_link(friend_id)
                        all_new_friends.append(friend_profile_link)
                        logger.info(f"New friend detected: {friend_id} added to {steam_id}")
                
                # Log removed friends (no telegram notification)
                removed_friends = previous_friends - current_friends
                if removed_friends:
                    for friend_id in removed_friends:
                        logger.debug(f"Friend removed: {friend_id} removed from {steam_id}")
                        
            except Exception as e:
                logger.error(f"Error processing task: {e}")
                completed += 1

    total_time = time.time() - start_time
    successful_accounts = len(current_data)
    avg_rate = successful_accounts / total_time if total_time > 0 else 0
    
    logger.info(f"Completed in {total_time:.2f}s - {avg_rate:.1f} accounts/sec - {successful_accounts}/{len(STEAM_ACCOUNTS)} successful")

    # Send batched notification for all new friends
    logger.info(f"Total new friends collected: {len(all_new_friends)}")
    
    if all_new_friends and not first_run:
        if len(all_new_friends) == 1:
            msg = f"New friend: {all_new_friends[0]}"
        else:
            msg = f"New friends detected ({len(all_new_friends)}):\n\n"
            msg += "\n".join([f"• {friend_link}" for friend_link in all_new_friends])
        
        logger.info(f"Sending Telegram notification for {len(all_new_friends)} new friends")
        await send_telegram_message(msg)
    elif all_new_friends and first_run:
        logger.info(f"New friends detected on first run (not sending notification): {len(all_new_friends)}")
    else:
        logger.info("No new friends detected in this cycle")

    # Save current data
    save_data(current_data)

    if first_run:
        total_accounts = len(current_data)
        private_accounts = len(STEAM_ACCOUNTS) - total_accounts
        total_friends = sum(data['count'] for data in current_data.values())
        
        logger.info(f"Steam Friend ID Monitor Setup Complete")
        logger.info(f"Monitoring {total_accounts} accounts")
        logger.info(f"Total friends being tracked: {total_friends}")
        if private_accounts > 0:
            logger.info(f"{private_accounts} accounts are private")
        logger.info("Bot will now notify when specific friends are added with their Steam IDs")
    else:
        logger.info(f"Friend check completed. Successfully processed {successful_accounts} accounts in {total_time:.2f}s")

if __name__ == '__main__':
    asyncio.run(check_accounts())
